let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <C-G>g <Plug>delimitMateJumpMany
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <C-H> <Plug>delimitMateBS
imap <buffer> <BS> <Plug>delimitMateBS
nmap <buffer> <silent> ,,e :call Spawn()
nmap <buffer> <silent> ,,w :wa
map <buffer> <silent> ,,1 :set foldlevel=0
map <buffer> <silent> ,,2 :set foldlevel=1
map <buffer> <silent> ,,3 :set foldlevel=2
map <buffer> <silent> ,,4 :set foldlevel=3
map <buffer> <silent> ,,5 :set foldlevel=4
map <buffer> <silent> ,,6 :set foldlevel=5
map <buffer> <silent> ,,7 :set foldlevel=6
map <buffer> <silent> ,,8 :set foldlevel=7
map <buffer> <silent> ,,9 :set foldlevel=8
map <buffer> <silent> ,,0 :set foldlevel=99999
map <buffer> <silent> ,,B :%s/\(^\t*\):/\1/e:let @/=""
map <buffer> <silent> ,,b :%s/\(^\t*\):/\1/e:%s/\(^\t*\) /\1: /e:let @/=""
map <buffer> <silent> ,,- o----------------------------------------0
map <buffer> <silent> ,,f :e .
map <buffer> <silent> ,,S :silent call SortChildren(1)
map <buffer> <silent> ,,s :silent call SortChildren(0)
nmap <buffer> <silent> ,,T ^:call InsertTime(1)a 
nmap <buffer> <silent> ,,t $:call InsertSpaceTime()
nmap <buffer> <silent> ,,D ^:call InsertDate(1)a 
nmap <buffer> <silent> ,,d $:call InsertSpaceDate()
map <buffer> <silent> ,,l <Plug>VO_CreateLink
noremap <buffer> <silent> ,,cT :call SetNextList()
noremap <buffer> <silent> ,,ct :call SetNextTag()
noremap <buffer> <silent> ,,cz :call NewHMD(FindRootParent(line(".")))
noremap <buffer> <silent> ,,c9 :call SetPercent(".",90)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c8 :call SetPercent(".",80)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c7 :call SetPercent(".",70)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c6 :call SetPercent(".",60)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c5 :call SetPercent(".",50)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c4 :call SetPercent(".",40)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c3 :call SetPercent(".",30)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c2 :call SetPercent(".",20)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c1 :call SetPercent(".",10)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c- :call DecPercent(".")   |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,c+ :call IncPercent(".")   |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,cx :call SwitchBox()       |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,cd :call DeleteCheckbox()
noremap <buffer> <silent> ,,cB :call InsertCheckBox()
noremap <buffer> <silent> ,,cp :call SafelyInsertCheckBoxPercentAlways()
noremap <buffer> <silent> ,,c% :call SafelyInsertCheckBoxPercent()
noremap <buffer> <silent> ,,cb :call SafelyInsertCheckBox()
map <buffer> P ]P
map <buffer> \\d :call VOcut()
map <buffer> \\r :call VOreg()
map <buffer> \\y :call VOcop()
map <buffer> \\b :call VOputreg()
map <buffer> p :call VOput()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer>  <Plug>delimitMateBS
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> <silent> ,,- ----------------------------------------
imap <buffer> <silent> ,,f :e .
imap <buffer> <silent> ,,t ~x:call InsertTime(0)a
imap <buffer> <silent> ,,d ~x:call InsertDate(0)a
imap <buffer> <silent> ,,l <Plug>VO_CreateLinkI
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO::\ -,mO::\ \ ,eO:::,::,sO:>\ -,mO:>\ \ ,eO:>>,:>
setlocal commentstring=/*%s*/
setlocal complete=.,k,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'votl'
setlocal filetype=votl
endif
setlocal fixendofline
setlocal foldcolumn=1
setlocal foldenable
setlocal foldexpr=MyFoldLevel(v:lnum)
setlocal foldignore=#
setlocal foldlevel=20
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=crqno
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal infercase
setlocal iskeyword=@,39,45,48-57,_,129-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal list
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=4
setlocal noshortname
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=auto
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=sv,en_gb,fr
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'votl'
setlocal syntax=votl
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tagfunc=
setlocal tags=~/.vim/vimoutliner/vo_tags.tag,tags
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=78
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal wincolor=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=5
let s:l = 9 - ((8 * winheight(0) + 13) / 26)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
9
normal! 07|
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
