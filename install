#!/usr/bin/env python
# -*- coding: utf8 filetype: py -*-

# Copyright (c) 2012 Svante Kvarnstr√∂m <sjk@ankeborg.nu>. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import os

class colours:
    BOLD = "\033[1m"
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'

    def disable(self):
        self.BOLD = ''
        self.HEADER = ''
        self.OKBLUE = ''
        self.OKGREEN = ''
        self.WARNING = ''
        self.FAIL = ''
        self.ENDC = ''

def print_header(str):
    line = '-' * len(str)
    print line
    print colours.HEADER + colours.BOLD + str + colours.ENDC
    print line

def print_warning(str):
    print colours.WARNING + str + colours.ENDC

def print_ok(str):
    print colours.OKGREEN + str + colours.ENDC

def create_symlink(src, dest):
    if os.path.isfile(dest) and not os.path.islink(dest):
        print_warning("Will not symlink %s -> %s: file exists" % (src, dest))
        return

    if os.path.islink(dest):
        os.unlink(dest)

    os.symlink(src, dest)
    print_ok("symlink: %s -> %s" % (src, dest))

def main():
    home = os.environ['HOME']
    home_bin = os.path.join(home, 'bin')
    config_dir = os.path.join(home, 'config')
    config_home = os.path.join(config_dir, 'home')
    config_bin = os.path.join(config_home, 'bin')

    os.chdir(config_home)

    # Install .dotfiles
    print_header('Installing home directory dotfiles')
    for src in os.listdir(config_home):
        if src in 'bin':
            continue
        create_symlink(os.path.abspath(src), os.path.join(home, '.' + src))

    # Install binaries
    print_header('Installing home directory binaries')
    if not os.path.exists(home_bin):
        print_ok('mkdir: %s' % home_bin)
        os.makedirs(home_bin)

    os.chdir(config_bin)

    for src in os.listdir(config_bin):
        create_symlink(os.path.abspath(src), os.path.join(home_bin, src))

main()

